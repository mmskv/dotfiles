# Configuration for Alacritty, the GPU enhanced terminal emulator

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty it self.
window:
  # Window dimensions (changes require restart)
  #
  # Specified in number of columns/lines, not pixels. If both are zero this
  # setting is ignored.
  dimensions:
    columns: 100
    lines: 85

  # Window padding (changes require restart)
  #
  # Blank space added around the window in pixels. This padding is not scaled by
  # DPI and the specified value is always added at both opposing sides.
  padding:
    x: 18
    y: 18

  # Spread additional padding evenly around the terminal content.
  dynamic_padding: false

  # Window decorations
  #
  # Available values:
  # - full: borders and title bar
  # - none: neither borders nor title bar
  # - transparent: title bar, transparent background and title bar buttons
  # - buttonless: title bar, transparent background, but no title bar buttons
  decorations: Full

  # Startup Mode (changes require restart)
  #
  # Values for `startup_mode`:
  #   - Windowed
  #   - Maximized
  #   - Fullscreen
  #
  # Values for `startup_mode` (macOS only):
  #   - SimpleFullscreen
  startup_mode: Windowed

scrolling:
  # maximum number of lines in the scrollback buffer. Specifying '0' will
  # disable scrolling.
  history: 100000

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  multiplier: 3

# Font configuration (changes require restart)
font:
  # The normal (roman) font face to use.
  # Style can be specified to pick a specific face.
  normal:
    family: Fira Mono for Powerline
    style: Regular

  # The bold font face
  bold:
    family: Fira Mono for Powerline
    style: Bold

  # Point size of the font
  size: 11.5

  # Offset is the extra space around each character. offset.y can be thought of
  # as modifying the linespacing, and offset.x as modifying the letter spacing.
  offset:
    x: 0
    y: -1

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increase the x offset to move the glyph to
  # the right, increase the y offset to move the glyph upward.
  glyph_offset:
    x: 0
    y: 0

# When true, bold text is drawn using the bright variant of colors.
draw_bold_text_with_bright_colors: false

# Use custom cursor colors. If true, display the cursor in the cursor.foreground
# and cursor.background colors, otherwise invert the colors of the cursor.
# custom_cursor_colors: false

# Colors
colors:
  # Default colours
  primary:

    background: '0x0D0E0F'
    foreground: '0xC5C8C6'

    cursor:
      cursor: '0x8ABEB7'

  # Normal colors
  dim:
    black:   '0x282A2E'
    red:     '0xA54242'
    green:   '0x8C9440'
    yellow:  '0xDE935F'
    blue:    '0x5F819D'
    magenta: '0x85678F'
    cyan:    '0x5E8D87'
    white:   '0x707880'

  # Bright colors
  bright:
    black:   '0x373B41'
    red:     '0xCC6666'
    green:   '0xB5BD68'
    yellow:  '0xF0C674'
    blue:    '0x81A2BE'
    magenta: '0xB294BB'
    cyan:    '0x8ABEB7'
    white:   '0xC5C8C6'


  # Indexed Colors
  #
  # The indexed colors include all colors from 16 to 256.
  # When these are not set, they're filled with sensible defaults.
  #
  # Example:
  #   `- { index: 16, color: '0xff00ff' }`
  #
  indexed_colors: []

key_bindings:
  - { key: L,         mods: Control,                    action: ClearLogNotice }
  - { key: L,         mods: Control, mode: ~Vi|~Search, chars: "\x0c"          }
  - { key: PageUp,    mods: Shift,   mode: ~Alt,        action: ScrollPageUp,  }
  - { key: PageDown,  mods: Shift,   mode: ~Alt,        action: ScrollPageDown }

    # Vi Mode
  - { key: Insert,   mods: Shift,         mode: ~Search,    action: ToggleViMode            }
  - { key: Escape,                      mode: Vi|~Search, action: ClearSelection          }
  - { key: I,                           mode: Vi|~Search, action: ScrollToBottom          }
  - { key: I,                           mode: Vi|~Search, action: ToggleViMode            }
  - { key: C,      mods: Control,       mode: Vi|~Search, action: ToggleViMode            }
  - { key: Y,      mods: Control,       mode: Vi|~Search, action: ScrollLineUp            }
  - { key: E,      mods: Control,       mode: Vi|~Search, action: ScrollLineDown          }
  - { key: G,                           mode: Vi|~Search, action: ScrollToTop             }
  - { key: G,      mods: Shift,         mode: Vi|~Search, action: ScrollToBottom          }
  - { key: B,      mods: Control,       mode: Vi|~Search, action: ScrollPageUp            }
  - { key: F,      mods: Control,       mode: Vi|~Search, action: ScrollPageDown          }
  - { key: U,      mods: Control,       mode: Vi|~Search, action: ScrollHalfPageUp        }
  - { key: D,      mods: Control,       mode: Vi|~Search, action: ScrollHalfPageDown      }
  - { key: Y,                           mode: Vi|~Search, action: Copy                    }
  - { key: Y,                           mode: Vi|~Search, action: ClearSelection          }
  - { key: Copy,                        mode: Vi|~Search, action: ClearSelection          }
  - { key: V,                           mode: Vi|~Search, action: ToggleNormalSelection   }
  - { key: V,      mods: Shift,         mode: Vi|~Search, action: ToggleLineSelection     }
  - { key: V,      mods: Control,       mode: Vi|~Search, action: ToggleBlockSelection    }
  - { key: V,      mods: Alt,           mode: Vi|~Search, action: ToggleSemanticSelection }
  - { key: Return,                      mode: Vi|~Search, action: Open                    }
  - { key: K,                           mode: Vi|~Search, action: Up                      }
  - { key: J,                           mode: Vi|~Search, action: Down                    }
  - { key: H,                           mode: Vi|~Search, action: Left                    }
  - { key: L,                           mode: Vi|~Search, action: Right                   }
  - { key: Up,                          mode: Vi|~Search, action: Up                      }
  - { key: Down,                        mode: Vi|~Search, action: Down                    }
  - { key: Left,                        mode: Vi|~Search, action: Left                    }
  - { key: Right,                       mode: Vi|~Search, action: Right                   }
  - { key: Key0,                        mode: Vi|~Search, action: First                   }
  - { key: Key4,   mods: Shift,         mode: Vi|~Search, action: Last                    }
  - { key: Key6,   mods: Shift,         mode: Vi|~Search, action: FirstOccupied           }
  - { key: H,      mods: Shift,         mode: Vi|~Search, action: High                    }
  - { key: M,      mods: Shift,         mode: Vi|~Search, action: Middle                  }
  - { key: L,      mods: Shift,         mode: Vi|~Search, action: Low                     }
  - { key: B,                           mode: Vi|~Search, action: SemanticLeft            }
  - { key: W,                           mode: Vi|~Search, action: SemanticRight           }
  - { key: E,                           mode: Vi|~Search, action: SemanticRightEnd        }
  - { key: B,      mods: Shift,         mode: Vi|~Search, action: WordLeft                }
  - { key: W,      mods: Shift,         mode: Vi|~Search, action: WordRight               }
  - { key: E,      mods: Shift,         mode: Vi|~Search, action: WordRightEnd            }
  - { key: Key5,   mods: Shift,         mode: Vi|~Search, action: Bracket                 }
  - { key: Slash,                       mode: Vi|~Search, action: SearchForward           }
  - { key: Slash,  mods: Shift,         mode: Vi|~Search, action: SearchBackward          }
  - { key: N,                           mode: Vi|~Search, action: SearchNext              }
  - { key: N,      mods: Shift,         mode: Vi|~Search, action: SearchPrevious          }

  # Search Mode
  #- { key: Return,                mode: Search|Vi,  action: SearchConfirm         }
  #- { key: Escape,                mode: Search,     action: SearchCancel          }
  #- { key: C,      mods: Control, mode: Search,     action: SearchCancel          }
  #- { key: U,      mods: Control, mode: Search,     action: SearchClear           }
  #- { key: W,      mods: Control, mode: Search,     action: SearchDeleteWord      }
  #- { key: P,      mods: Control, mode: Search,     action: SearchHistoryPrevious }
  #- { key: N,      mods: Control, mode: Search,     action: SearchHistoryNext     }
  #- { key: Up,                    mode: Search,     action: SearchHistoryPrevious }
  #- { key: Down,                  mode: Search,     action: SearchHistoryNext     }
  #- { key: Return,                mode: Search|~Vi, action: SearchFocusNext       }
  #- { key: Return, mods: Shift,   mode: Search|~Vi, action: SearchFocusPrevious   }

  # (Windows, Linux, and BSD only)
  - { key: V,              mods: Control|Shift, mode: ~Vi,        action: Paste            }
  - { key: C,              mods: Control|Shift,                   action: Copy             }
  - { key: F,              mods: Control|Shift, mode: ~Search,    action: SearchForward    }
  - { key: B,              mods: Control|Shift, mode: ~Search,    action: SearchBackward   }
  - { key: C,              mods: Control|Shift, mode: Vi|~Search, action: ClearSelection   }
  - { key: Key0,           mods: Control,                         action: ResetFontSize    }
  - { key: Equals,         mods: Control,                         action: IncreaseFontSize }
  - { key: Plus,           mods: Control,                         action: IncreaseFontSize }
  - { key: NumpadAdd,      mods: Control,                         action: IncreaseFontSize }
  - { key: Minus,          mods: Control,                         action: DecreaseFontSize }
  - { key: NumpadSubtract, mods: Control,                         action: DecreaseFontSize }

mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }

  # If this is `true`, the cursor is temporarily hidden when typing.
  hide_when_typing: false

selection:
  semantic_escape_chars: ",│`|:\"' ()[]{}<>"

  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: false

# Mouse bindings
#
# Available fields:
# - mouse
# - action
# - mods (optional)
#
# Values for `mouse`:
# - Middle
# - Left
# - Right
# - Numeric identifier such as `5`
#
# All available `mods` and `action` values are documented in the key binding
# section.
mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

cursor:
  # Cursor style
  #
  # Values for 'style':
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  style: 
    shape: Beam
  vi_mode_style:
    shape: Block

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  unfocused_hollow: true

# dynamic_title: false

# Live config reload (changes require restart)
live_config_reload: false

# Shell
#
# You can set shell.program to the path of your favorite shell, e.g. /bin/fish.
# Entries in shell.args are passed unmodified as arguments to the shell.

debug:
  # Should display the render timer
  render_timer: false

  # Keep the log file after quitting Alacritty.
  persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - OFF
  #   - ERROR
  #   - WARN
  #   - INFO
  #   - DEBUG
  #   - TRACE
  log_level: OFF

  # Print all received window events.
  print_events: false

  # Record all characters and escape sequences as test data.
  ref_test: false

# vim: nospell:
